{"version":3,"sources":["components/header/index.js","components/header/Header.jsx","components/sidebar/index.js","components/sidebar/Sidebar.jsx","components/event/Event.jsx","components/event/index.js","components/time-line/TimeLine.jsx","components/time-line/index.js","components/day/Day.jsx","components/day/index.js","components/week/Week.jsx","components/week/index.js","components/day-label/index.js","components/day-label/DayLabel.jsx","components/view-schedule/ViewSchedule.jsx","components/view-schedule/index.js","components/form-create-event/FormCreateEvent.jsx","components/form-create-event/index.js","components/popup/Popup.jsx","components/popup/index.js","services/mockApiService.js","validator/validator.js","components/app/App.jsx","components/app/index.js","index.js"],"names":["Header","this","props","date","goToday","goNextWeek","goPrevWeek","onShowPopup","className","onClick","e","width","height","viewBox","fill","d","day","moment","startNameMonth","format","startNameYear","lastNameMonth","add","lastNameYear","year","month","getTitle","React","PureComponent","Sidebar","arrHoursElems","Array","map","el","index","key","getStyle","event","startDay","startDate","startEvent","diffMinutes","endDate","diff","top","backgroundColor","color","Event","style","name","defaultProps","title","getTop","heigthHour","now","TimeLine","state","intervalId","setInterval","setState","clearInterval","Component","getSelectedDate","coordinatY","nativeEvent","layerY","hours","Math","trunc","countMinutes","minutes","Day","handleClick","selectedDate","nextProps","isEmptyOldListEvents","events","length","isEmptyNewListEvents","isSameDate","eventsList","id","today","currentDate","isSame","isToday","Week","listEvents","nextDay","days","filter","endDateEvent","currentDay","getEventsOfDay","dayElem","DayLabel","labels","todayStyle","labelElem","ViewSchedule","FormCreateEvent","onSubmit","handleSubmit","onClosePopup","required","type","placeholder","value","onChange","step","startTime","endTime","description","isShowTrashIcon","onDeleteEvent","Popup","target","preventDefault","startDateResult","endDateResult","createDate","MockApiService","baseUrl","restApi","method","a","async","url","configObjectMethod","headers","body","JSON","stringify","fetch","res","ok","json","Error","status","getEvents","addEvent","deleteEvent","editEvent","newEvent","oldEvent","find","validator","isValidTime","isIntersect","alert","isDurationExceeded","isFinishToday","updateLocale","week","dow","doy","App","firstDayOfWeek","startOf","dataPoupComponent","mockApiService","fetchListEvents","then","onCreateEvent","onEditEvent","subtract","stopPropagation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.131b6556.chunk.js","sourcesContent":["import Header from './Header';\n\nexport default Header;","import React from 'react';\nimport './Header.scss';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nfunction getTitle(date) {\n  const day = moment(date);\n  const startNameMonth = day.format('MMM');\n  const startNameYear = day.format('YYYY');\n  const lastNameMonth = moment(day).add('days', 6).format('MMM');\n  const lastNameYear = moment(day).add('days', 6).format('YYYY');\n  const year = startNameYear !== lastNameYear ? startNameYear : '';\n  const month = startNameMonth !== lastNameMonth ? '- ' + lastNameMonth : '';\n  return `${startNameMonth} ${year} ${month} ${lastNameYear}`;\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    const { date, goToday, goNextWeek, goPrevWeek, onShowPopup } = this.props;\n    return (\n      <header className=\"header\">\n        <nav className=\"navigate\">\n          <button onClick={(e) => onShowPopup(e)} className=\"navigate__btn-create\">\n            <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\n              <path fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path><path fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path><path fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\"></path><path fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path><path fill=\"none\" d=\"M0 0h36v36H0z\"></path>\n            </svg>\n            Create\n          </button>\n          <button onClick={goToday} className=\"navigate__btn-today\">Today</button>\n          <div className=\"navigate__arows\">\n            <div onClick={goPrevWeek} className=\"navigate__arows_left\"></div>\n            <div onClick={goNextWeek} className=\"navigate__arows_right\"></div>\n          </div>\n          <div className=\"navigate__title\">{getTitle(date)}</div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onShowPopup: PropTypes.func.isRequired,\n  goNextWeek: PropTypes.func.isRequired,\n  goPrevWeek: PropTypes.func.isRequired,\n  goToday: PropTypes.func.isRequired,\n  date: PropTypes.object.isRequired,\n}\n\nexport default Header;","import Sidebar from './Sidebar';\n\nexport default Sidebar;","import React from 'react';\nimport './Sidebar.scss';\n\nclass Sidebar extends React.PureComponent {\n  render() {\n    const arrHoursElems = [...new Array(24)].map((el, index) => (\n      <div key={index} className=\"hour\">\n        <span className=\"hour__text\">{`${(index < 10) ? `0${index}` : index}:00`}</span>\n      </div>));\n\nreturn (\n      <div className=\"sidebar\">\n        {arrHoursElems}\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;","import React from 'react';\nimport './Event.scss';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nfunction getStyle(event) {\n  const heightOneMinute = (42 / 60);\n  const startDay = moment(event.startDate).format('YYYY-MM-DD');\n  const startEvent = moment(event.startDate);\n  const endEvent = moment(event.endDate);\n  const diffMinutes = endEvent.diff(startEvent, 'minutes');\n  const top = startEvent.diff(startDay, 'minutes');\n\n  return {\n    backgroundColor: `${event.color}`,\n    top: `${top * heightOneMinute}px`,\n    height: `${diffMinutes * heightOneMinute}px`\n  };\n}\n\nfunction Event({ event, onShowPopup }) {\n  return (\n    <div onClick={(e) => onShowPopup(e, event)} className=\"day-event\" style={getStyle(event)}>\n      <div className=\"day-event__title\">{event.name}</div>\n      <span>{`${moment(event.startDate).format('HH:mm')} - ${moment(event.endDate).format('HH:mm')}`}</span>\n    </div>\n  );\n}\n\nEvent.propTypes = {\n  event: PropTypes.object.isRequired,\n  onShowPopup: PropTypes.func.isRequired,\n}\n\nEvent.defaultProps = {\n  title: 'Default title',\n}\n\nexport default Event;","import Event from './Event';\n\nexport default Event;","import React from 'react';\nimport './TimeLine.scss';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nfunction getTop(heigthHour) {\n  const now = moment();\n  const startDay = moment().format('YYYY-MM-DD');\n  const diffMinutes = now.diff(startDay, 'minutes');\n  return diffMinutes * (heigthHour / 60);\n}\n\nclass TimeLine extends React.Component {\n  state = {\n    top: getTop(this.props.heigthHour),\n  }\n  \n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      this.setState({ top: getTop(this.props.heigthHour) });\n    }, 60000);\n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  \n  render() {\n    return (\n      <div className=\"time-line\" style={{ top: this.state.top }} />\n      );\n    }\n  }\n\n  TimeLine.propTypes = {\n    heigthHour: PropTypes.number.isRequired,\n  }\n  \n  export default TimeLine;","import TimeLine from './TimeLine';\n\nexport default TimeLine;","import React from 'react';\nimport './Day.scss';\nimport Event from '../event';\nimport TimeLine from '../time-line';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst HEIGTH_HOUR = 42;\n\nfunction getSelectedDate(e, date) {\n  const coordinatY = e.nativeEvent.layerY;\n  const hours = Math.trunc(coordinatY / HEIGTH_HOUR);\n  const countMinutes = (coordinatY - (HEIGTH_HOUR * hours)) / (HEIGTH_HOUR / 60);\n  const minutes = (countMinutes - (countMinutes % 15)) + 15;\n  return moment(date).hours(hours).minutes(minutes).format();\n}\n\nfunction isToday(date) {\n  const today = moment().format('YYYY-MM-DD');\n  const currentDate = moment(date).format('YYYY-MM-DD');\n  return moment(today).isSame(currentDate);\n}\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const isEmptyOldListEvents = this.props.events.length === 0;\n    const isEmptyNewListEvents = nextProps.events.length === 0;\n    const isSameDate = this.props.date === nextProps.date;\n    if (isEmptyOldListEvents && isEmptyNewListEvents && isSameDate) return false;\n    return true;\n  }\n\n  handleClick = (e) => {\n    const selectedDate = getSelectedDate(e, this.props.date)\n    this.props.onShowPopup(e, null, selectedDate);\n  }\n\n  render() {\n    const eventsList = this.props.events.map((event) => {\n      return <Event key={event.id} event={event} onShowPopup={this.props.onShowPopup} />;\n    });\n\n    return (\n      <div onClick={this.handleClick} className=\"column-day\">\n        {eventsList}\n        {isToday(this.props.date) && <TimeLine heigthHour={HEIGTH_HOUR}/>}\n      </div>\n    );\n  }\n}\n\nDay.propTypes = {\n  date: PropTypes.string.isRequired,\n  events: PropTypes.array.isRequired,\n  onShowPopup: PropTypes.func.isRequired,\n}\n\nexport default Day;","import Day from './Day';\n\nexport default Day;","import React from 'react';\nimport './Week.scss';\nimport Day from '../day';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nfunction getEventsOfDay(events, date) {\n  return events.filter((event) => {\n    const endDateEvent = moment(event.endDate, 'YYYY-MM-DD');\n    const currentDay = moment(date, 'YYYY-MM-DD');\n    return moment(currentDay).isSame(endDateEvent);\n  });\n}\n\nfunction Week({ date, listEvents, onShowPopup }) {\n  let nextDay = moment(date).format('YYYY-MM-DD');\n  const days = [...new Array(7)].map(() => {\n    const events = getEventsOfDay(listEvents, nextDay);\n    const dayElem = <Day key={nextDay} date={nextDay} events={events} onShowPopup={onShowPopup} />;\n    nextDay = moment(nextDay).add('days', 1).format('YYYY-MM-DD');\n    return dayElem;\n  });\n\n  return (\n    <div className=\"week\">\n      {days}\n    </div>\n  );\n}\n\nWeek.propTypes = {\n  onShowPopup: PropTypes.func.isRequired,\n  listEvents: PropTypes.array,\n  date: PropTypes.object.isRequired,\n}\n\nWeek.defaultProps = {\n  listEvents: [],\n}\n\nexport default Week;","import Week from './Week';\n\nexport default Week;","import DayLabel from './DayLabel';\n\nexport default DayLabel;","import React from 'react';\nimport './DayLabel.scss';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nclass DayLabel extends React.PureComponent {\n  render() {\n    let nextDay = moment(this.props.date).format('YYYY-MM-DD');\n    const labels = [...new Array(7)].map(() => {\n      const today = moment().format('YYYY-MM-DD');\n      const todayStyle = moment(today).isSame(nextDay) ? ' today' : '';\n      const labelElem = (\n        <div key={nextDay} className=\"label-day\">\n          <span className=\"label-day__title\">{moment(nextDay).format('ddd')}</span>\n          <div className={`label-day__date${todayStyle}`}>{moment(nextDay).format('DD')}</div>\n          <div className=\"decor-line\"></div>\n        </div>);\n      nextDay = moment(nextDay).add('days', 1).format('YYYY-MM-DD');\n      return labelElem;\n    });\n    \n    return (\n      <div className=\"labels\">\n        {labels}\n      </div>\n    );\n  }\n}\n\nDayLabel.propTypes = {\n  date: PropTypes.object.isRequired,\n}\n\nexport default DayLabel;","import React from 'react';\nimport './ViewSchedule.scss';\nimport Sidebar from '../sidebar'\nimport Week from '../week';\nimport DayLabel from '../day-label';\nimport PropTypes from 'prop-types';\n\nfunction ViewSchedule({ date, listEvents, onShowPopup }) {\n  return (\n    <>\n      <DayLabel date={date} />\n      <div className=\"schedule\">\n        <Sidebar />\n        <Week listEvents={listEvents} date={date} onShowPopup={onShowPopup} />\n      </div>\n    </>\n  );\n}\n\nViewSchedule.propTypes = {\n  onShowPopup: PropTypes.func.isRequired,\n  listEvents: PropTypes.array,\n  date: PropTypes.object.isRequired,\n}\n\nViewSchedule.defaultProps = {\n  listEvents: [],\n}\n\nexport default ViewSchedule;","import ViewSchedule from './ViewSchedule';\n\nexport default ViewSchedule;","import React from 'react';\nimport './FormCreateEvent.scss';\nimport PropTypes from 'prop-types';\n\nfunction FormCreateEvent(props) {\n  return (\n    <form onSubmit={props.handleSubmit} className=\"popup event\">\n      <span onClick={props.onClosePopup} className=\"popup__btn-close\">\n        <i className=\"fas fa-times\"></i>\n      </span>\n      <input name=\"name\" required className=\"event__name\" type=\"text\" placeholder=\"Add title \"\n        value={props.name} onChange={props.onChange} />\n      <div className=\"popup__color-picker\">\n        <i className=\"fas fa-palette\"></i>\n        <label className=\"popup__color-picker_label\">\n          <span className=\"popup__color-picker_label-text\">Select a color</span>\n          <input name=\"color\" className=\"event__color-picker\" type=\"color\"\n            value={props.color} onChange={props.onChange} />\n        </label>\n      </div>\n      <div className=\"popup__picker\">\n        <span className=\"popup__picker-icon\">\n          <i className=\"far fa-clock\"></i>\n        </span>\n        <input name=\"startDate\" required className=\"event__date-start\" type=\"date\"\n          value={props.startDate} onChange={props.onChange} />\n        <input name=\"startTime\" required className=\"event__time-start select\" type=\"time\" step=\"900\"\n          value={props.startTime} onChange={props.onChange} />\n        <span className=\"decor-dash\"></span>\n        <input name=\"endTime\" required className=\"event__time-end select\" type=\"time\" step=\"900\"\n          value={props.endTime} onChange={props.onChange} />\n        <input name=\"endDate\" required className=\"event__date-end\" type=\"date\"\n          value={props.endDate} onChange={props.onChange} />\n      </div>\n      <div className=\"popup__description\">\n        <i className=\"fas fa-align-left\"></i>\n        <textarea name=\"description\" className=\"event__description\" placeholder=\"Add description\"\n          value={props.description} onChange={props.onChange} />\n      </div>\n      <div className=\"footer-popup\">\n        {props.isShowTrashIcon &&\n          <span onClick={props.onDeleteEvent} className=\"event__btn-delete\">\n            <i className=\"fas fa-trash-alt\"></i>\n          </span>}\n        <button className=\"event__btn-save\">Save</button>\n      </div>\n    </form>\n  );\n}\n\nFormCreateEvent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  onClosePopup: PropTypes.func.isRequired,\n  onDeleteEvent: PropTypes.func.isRequired,\n  startDate: PropTypes.string.isRequired,\n  startTime: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  endTime: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  isShowTrashIcon: PropTypes.bool.isRequired,\n}\n\nFormCreateEvent.defaultProps = {\n  name: '',\n  description: '',\n}\n\nexport default FormCreateEvent;","import FormCreateEvent from './FormCreateEvent';\n\nexport default FormCreateEvent;","import React from 'react';\nimport './Popup.scss';\nimport FormCreateEvent from '../form-create-event';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nclass Popup extends React.Component {\n  state = {\n    name: '',\n    startDate: moment().format('YYYY-MM-DD'),\n    startTime: `${moment().add('hours', 1).format('HH')}:00`,\n    endDate: moment().format('YYYY-MM-DD'),\n    endTime: `${moment().add('hours', 2).format('HH')}:00`,\n    description: '',\n    color: '#4183f1',\n    isShowTrashIcon: false\n  }\n  \n  componentDidMount() {\n    const { event, date } = this.props;\n    if (date) {\n      this.setState({\n        startDate: moment(date).format('YYYY-MM-DD'),\n        startTime: moment(date).format('HH:mm'),\n        endDate: moment(date).format('YYYY-MM-DD'),\n        endTime: moment(date).add('hours', 1).format('HH:mm'),\n      });\n    }\n    if (event) {\n      this.setState({\n        name: event.name,\n        startDate: moment(event.startDate).format('YYYY-MM-DD'),\n        startTime: moment(event.startDate).format('HH:mm'),\n        endDate: moment(event.endDate).format('YYYY-MM-DD'),\n        endTime: moment(event.endDate).format('HH:mm'),\n        description: event.description,\n        color: event.color,\n        isShowTrashIcon: true\n      });\n    }\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  \n  onDeleteEvent = () => {\n    if (this.props.event) {\n      this.props.onDeleteEvent(this.props.event.id)\n    }\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, color, startDate, startTime, endDate, endTime, description } = this.state;\n    const startDateResult = moment(startDate + 'T' + startTime).format();\n    const endDateResult = moment(endDate + 'T' + endTime).format();\n    const event = {\n      createDate: moment().format(),\n      startDate: startDateResult,\n      endDate: endDateResult,\n      description,\n      color,\n      name,\n    };\n    if (this.props.event) event.id = this.props.event.id;\n    this.props.handleSubmit(event);\n  }\n\n  render() {\n    return (\n      <div className=\"popup-container\">\n        <div onClick={this.props.onClosePopup} className=\"popup-layer\" />\n        <FormCreateEvent {...this.state}\n          onDeleteEvent={this.onDeleteEvent}\n          handleSubmit={this.handleSubmit}\n          onClosePopup={this.props.onClosePopup}\n          onChange={this.onChange}\n          />\n      </div>\n    );\n  }\n}\n\nPopup.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  onClosePopup: PropTypes.func.isRequired,\n  onDeleteEvent: PropTypes.func.isRequired,\n  event: PropTypes.object,\n  date: PropTypes.string,\n}\n\nPopup.defaultProps = {\n  date: '',\n}\n\nexport default Popup;","import Popup from './Popup';\n\nexport default Popup;","export default class MockApiService {\n  baseUrl = 'http://5e300c25576f9d0014d63ac2.mockapi.io/api/v1/listEvents';\n\n  restApi = async (method, event, id) => {\n    let url = this.baseUrl;\n    let configObjectMethod = {};\n\n    switch (method) {\n      case 'DELETE':\n        configObjectMethod = { method: 'DELETE' };\n        url += `/${id}`;\n        break;\n      case 'POST':\n        configObjectMethod = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json;charset=utf-8', },\n          body: JSON.stringify(event),\n        };\n        break;\n      case 'PUT':\n        configObjectMethod = {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json;charset=utf-8', },\n          body: JSON.stringify(event),\n        };\n        url += `/${id}`;\n        break;\n      default:\n        configObjectMethod = null;\n        break;\n    }\n\n    const res = await fetch(url, configObjectMethod);\n    if (res.ok) return await res.json();\n    throw new Error(`Could not fetch, received ${res.status}`);\n  }\n\n  getEvents = async () => {\n    return await this.restApi();\n  };\n\n  addEvent = async (event) => {\n    return await this.restApi('POST', event);\n  }\n\n  deleteEvent = async (id) => {\n    return await this.restApi('DELETE', null, id);\n  }\n\n  editEvent = async ({ id, ...newEvent }) => {\n    const events = await this.getEvents();\n    const oldEvent = events.find((e) => e.id === id);\n    const event = { ...oldEvent, ...newEvent };\n    return await this.restApi('PUT', event, event.id);\n  }\n}","import moment from 'moment';\n\nfunction isIntersect(listEvents, event) {\n  const existingEvent = listEvents.find((e) => {\n    if (event.id === e.id) return false;\n    if (moment(event.endDate) <= moment(e.startDate)\n      || moment(event.startDate) >= moment(e.endDate)) return false;\n    return true;\n  });\n  return !!existingEvent;\n}\n\nfunction isDurationExceeded(event) {\n  const SIX_HOURS = 6 * 60 * 60 * 1000;\n  return moment(event.endDate) - moment(event.startDate) > SIX_HOURS;\n}\n\nfunction isFinishToday(event) {\n  const startDate = moment(event.startDate).format('YYYY-MM-DD');\n  const endDate = moment(event.endDate).format('YYYY-MM-DD');\n  return endDate === startDate;\n}\n\nfunction isValidTime(event) {\n  return moment(event.endDate) > moment(event.startDate);\n}\n\nfunction validator(listEvents, event) {\n\n  if (!isValidTime(event)) {\n    alert('Событие должно заканчиваться позже чем начинаться!');\n    return false;\n  }\n\n  if (isIntersect(listEvents, event)) {\n    alert('У Вас уже запланировано событие на это время!');\n    return false;\n  }\n\n  if (isDurationExceeded(event)) {\n    alert('Событие не может длиться дольше 6-ти часов!');\n    return false;\n  }\n\n  if (!isFinishToday(event)) {\n    alert('Событие должно начаться и закончиться в пределах одного дня!');\n    return false;\n  }\n\n  return true;\n}\n\nexport default validator;","import React from 'react';\nimport './App.scss';\nimport Header from '../header'\nimport ViewSchedule from '../view-schedule';\nimport Popup from '../popup';\nimport MockApiService from '../../services/mockApiService';\nimport validator from '../../validator/validator';\nimport moment from 'moment';\n\nmoment.updateLocale('en', {\n  week: {\n      dow: 1,\n      doy: 4\n   }\n});\n\nclass App extends React.Component {\n  state = {\n    firstDayOfWeek: moment().startOf('week'),\n    listEvents: [],\n    dataPoupComponent: null\n  };\n  mockApiService = new MockApiService();\n\n  componentDidMount() {\n    this.fetchListEvents();\n  }\n\n  fetchListEvents = () => {\n    this.mockApiService.getEvents()\n      .then(listEvents => {\n        this.setState({ listEvents });\n      });\n  }\n\n  onCreateEvent = (event) => {\n    this.mockApiService.addEvent(event)\n      .then(() => this.fetchListEvents());\n  }\n\n  onDeleteEvent = (id) => {\n    this.onClosePopup();\n    this.mockApiService.deleteEvent(id)\n      .then(() => this.fetchListEvents());\n  }\n\n  onEditEvent = (event) => {\n    this.mockApiService.editEvent(event)\n      .then(() => this.fetchListEvents());\n  }\n\n  goNextWeek = () => {\n    this.setState((state) => {\n      return { firstDayOfWeek: moment(state.firstDayOfWeek).add('days', 7) }\n    });\n  }\n\n  goPrevWeek = () => {\n    this.setState((state) => {\n      return { firstDayOfWeek: moment(state.firstDayOfWeek).subtract('days', 7) }\n    });\n  }\n\n  goToday = () => {\n    this.setState({ firstDayOfWeek: moment().startOf('week') });\n  }\n\n  onShowPopup = (e, event, date) => {\n    e.stopPropagation();\n    this.setState({ dataPoupComponent: event || date ? { event, date } : {} });\n  }\n\n  onClosePopup = () => {\n    this.setState((state) => ({ dataPoupComponent: null }));\n  }\n\n  handleSubmit = (event) => {\n    if (!validator(this.state.listEvents, event)) return;\n    if (event.id) {\n      this.onEditEvent(event);\n    } else {\n      this.onCreateEvent(event);\n    }\n    this.onClosePopup();\n  }\n\n  render() {\n    const { firstDayOfWeek, listEvents } = this.state;\n\n    return (\n      <>\n        <Header\n          date={firstDayOfWeek}\n          goToday={this.goToday}\n          goNextWeek={this.goNextWeek}\n          goPrevWeek={this.goPrevWeek}\n          onShowPopup={this.onShowPopup}\n        />\n        <main className=\"main\">\n          <ViewSchedule\n            listEvents={listEvents}\n            date={firstDayOfWeek}\n            onShowPopup={this.onShowPopup}\n          />\n        </main>\n        {this.state.dataPoupComponent && <Popup\n          onClosePopup={this.onClosePopup}\n          onDeleteEvent={this.onDeleteEvent}\n          handleSubmit={this.handleSubmit}\n          {...this.state.dataPoupComponent}\n        />}\n      </>\n    );\n  }\n}\n\nexport default App;","import App from './App';\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
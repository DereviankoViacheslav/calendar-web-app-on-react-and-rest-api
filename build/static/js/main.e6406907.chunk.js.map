{"version":3,"sources":["components/header/Header.jsx","components/header/index.js","components/sidebar/Sidebar.jsx","components/sidebar/index.js","components/event/Event.jsx","components/event/index.js","components/time-line/TimeLine.jsx","components/time-line/index.js","components/day/Day.jsx","components/day/index.js","components/week/Week.jsx","components/week/index.js","components/day-label/DayLabel.jsx","components/day-label/index.js","components/view-schedule/ViewSchedule.jsx","components/view-schedule/index.js","components/popup/Popup.jsx","components/popup/index.js","services/mockApiService.js","components/app/index.js","components/app/App.jsx","index.js"],"names":["Header","className","Sidebar","arrHoursElems","Array","map","el","index","key","getStyle","event","startDay","moment","startDate","format","startEvent","diffMinutes","endDate","diff","top","backgroundColor","color","height","Event","data-id-event","style","name","now","TimeLine","state","this","intervalId","setInterval","setState","currentTime","clearInterval","React","Component","Day","date","events","today","currentDate","isToday","isSame","eventsList","id","Week","dates","listEvents","days","filter","endDateEvent","currentDay","getEventsOfDay","DayLabel","labels","day","todayClass","ViewSchedule","Popup","type","required","placeholder","value","step","cols","rows","MockApiService","baseUrl","restApi","method","task","a","async","url","configObjectMethod","headers","body","JSON","stringify","fetch","res","ok","json","Error","status","getEvents","addEvent","deleteEvent","editEvent","newEvent","getResource","oldEvent","find","e","App","mockApiService","fetchListEvents","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6406907.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"head\">\n      <nav className=\"navigate\">\n        <button className=\"navigate_create\">Create</button>\n        <button className=\"navigate_today\">Today</button>\n        <div className=\"navigate__arows\">\n          <div className=\"navigate__arows_left\"></div>\n          <div className=\"navigate__arows_right\"></div>\n        </div>\n        <div className=\"navigate__MonthAndYear\">Jan - Feb 2020</div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;","import React from 'react';\n\nfunction Sidebar() {\n  const arrHoursElems = [...new Array(24)].map((el, index) => (\n    <div key={index} className=\"hour\">\n      <span className=\"hour__text\">{`${(index < 10) ? `0${index}` : index}:00`}</span>\n    </div>));\n\n  return (\n    <div className=\"sidebar\">\n      {arrHoursElems}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import Sidebar from './Sidebar';\n\nexport default Sidebar;","import React from 'react';\nimport moment from 'moment';\n\nfunction getStyle(event) {\n  const heightOneMinute = (42 / 60);\n  const startDay = moment(event.startDate).format('YYYY-MM-DD');\n  const startEvent = moment(event.startDate);\n  const endEvent = moment(event.endDate);\n  const diffMinutes = endEvent.diff(startEvent, 'minutes');\n  const top = startEvent.diff(startDay, 'minutes');\n  \n  return {\n    backgroundColor: `${event.color}`,\n    top: `${top * heightOneMinute}px`,\n    height: `${diffMinutes * heightOneMinute}px`\n  };\n}\n\nfunction Event({ event }) {\n  return (\n    <div data-id-event=\"3\" className=\"day-event\" style={getStyle(event)}>\n      <div className=\"day-event__title\">{event.name}</div>\n      <span>{`${moment(event.startDate).format('HH:mm')} - ${moment(event.endDate).format('HH:mm')}`}</span>\n    </div>\n  );\n}\n\nexport default Event;","import Event from './Event';\n\nexport default Event;","import React from 'react';\nimport moment from 'moment';\n\nfunction getStyle() {\n  const heightOneMinute = (42 / 60);\n  const now = moment();\n  const startDay = moment().format('YYYY-MM-DD');\n  const diffMinutes = now.diff(startDay, 'minutes');\n  return { top: `${diffMinutes * heightOneMinute}px` }\n}\n\nclass TimeLine extends React.Component {\n  state = {\n    style: getStyle(),\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      this.setState({ currentTime: getStyle() })\n    }, 60000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return (\n      <div className=\"time-line\" style={this.state.style} />\n    );\n  }\n}\n\nexport default TimeLine;","import TimeLine from './TimeLine';\n\nexport default TimeLine;","import React from 'react';\nimport Event from '../event';\nimport TimeLine from '../time-line';\nimport moment from 'moment';\n\nfunction Day({ date, events }) {\n  const today = moment().format('YYYY-MM-DD');\n  const currentDate = moment(date).format('YYYY-MM-DD');\n  const isToday = moment(today).isSame(currentDate);\n\n  const eventsList = events.map((event) => {\n    return <Event key={event.id} event={event} ></Event>;\n  });\n\n  return (\n    <div id={date} className=\"column-day\">\n      {eventsList}\n      {isToday && <TimeLine />}\n    </div>\n  );\n}\n\nexport default Day;","import Day from './Day';\n\nexport default Day;","import React from 'react';\nimport Day from '../day';\nimport moment from 'moment';\n\nfunction getEventsOfDay(events, date) {\n  return events.filter((event) => {\n    const endDateEvent = moment(event.endDate, 'YYYY-MM-DD');\n    const currentDay = moment(date, 'YYYY-MM-DD');\n    return moment(currentDay).isSame(endDateEvent);\n  });\n}\n\nfunction Week({ dates, listEvents }) {\n  const days = dates.map((date) => {\n    const events = getEventsOfDay(listEvents, date);\n    return <Day key={date} date={date} events={events} />;\n  });\n\n  return (\n    <div className=\"days\">\n      {days}\n    </div>\n  );\n}\n\nexport default Week;","import Week from './Week';\n\nexport default Week;","import React from 'react';\nimport moment from 'moment';\n\nfunction DayLabel({ dates }) {\n  const labels = dates.map((date) => {\n    const day = moment(date, 'YYYY-MM-DD');\n    const currentDate = moment().format('YYYY-MM-DD');\n    const todayClass = moment(currentDate).isSame(day) ? ' today' : '';\n\n    return (\n      <div key={date} className=\"day\">\n        <span className=\"day_nameDay\">{day.format('ddd')}</span>\n        <div className={`day_numberDay${todayClass}`}>{day.format('DD')}</div>\n        <div className=\"LittleBorder\"></div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"week\">\n      {labels}\n    </div>\n  );\n}\n\nexport default DayLabel;","import DayLabel from './DayLabel';\n\nexport default DayLabel;","import React from 'react';\nimport Sidebar from '../sidebar'\nimport Week from '../week';\nimport DayLabel from '../day-label';\n\nfunction ViewSchedule({ dates, listEvents }) {\n  return (\n    <>\n      <DayLabel dates={dates} />\n      <div className=\"schedule\">\n        <Sidebar />\n        <Week listEvents={listEvents} dates={dates} />\n      </div>\n    </>\n  );\n}\n\nexport default ViewSchedule;","import ViewSchedule from './ViewSchedule';\n\nexport default ViewSchedule;","import React from 'react';\n\nfunction Popup() {\n  return (\n    <div className=\"popup-layer display-none\">\n      <form className=\"popup event\" data-id-event=\"\">\n        <span className=\"popup__btn-close\">X</span>\n        <input className=\"event__name\" name=\"name\" type=\"text\" required=\"\" placeholder=\"Add title \" />\n        <div className=\"popup__color-picker\">\n          <label className=\"popup__color-picker_label\">\n            <span className=\"popup__color-picker_label-text\">Select a color</span>\n            <input className=\"event__color-picker\" type=\"color\" name=\"color\" value=\"#4183f1\" />\n          </label>\n        </div>\n        <div className=\"popup__picker\">\n          <input className=\"event__date-start\" name=\"dateStart\" required=\"\" type=\"date\" />\n          <input className=\"event__time-start select\" name=\"timeStart\" required=\"\" type=\"time\" step=\"900\" />\n          <span className=\"line\"></span>\n          <input className=\"event__time-end select\" name=\"timeEnd\" required=\"\" type=\"time\" step=\"900\" />\n          <input className=\"event__date-end\" name=\"dateEnd\" required=\"\" type=\"date\" />\n        </div>\n        <textarea className=\"event__description\" name=\"description\" cols=\"15\" rows=\"5\" placeholder=\"Add description\" />\n        <div className=\"footer-popup\">\n          <span className=\"event__btn-delete\">bascket</span>\n          <button className=\"event__btn-save\">Save</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Popup;\n","import Popup from './Popup';\n\nexport default Popup;","export default class MockApiService {\n  baseUrl = 'http://5e300c25576f9d0014d63ac2.mockapi.io/api/v1/listEvents';\n\n  restApi = async (method, task, id) => {\n    let url = this.baseUrl;\n    let configObjectMethod = {};\n  \n    switch (method) {\n      case 'DELETE':\n        configObjectMethod = { method: 'DELETE' };\n        url += `/${id}`;\n        break;\n      case 'POST':\n        configObjectMethod = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json;charset=utf-8', },\n          body: JSON.stringify(task),\n        };\n        break;\n      case 'PUT':\n        configObjectMethod = {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json;charset=utf-8', },\n          body: JSON.stringify(task),\n        };\n        url += `/${id}`;\n        break;\n      default:\n        configObjectMethod = null;\n        break;\n    }\n  \n    const res = await fetch(url, configObjectMethod);\n    if (res.ok) return await res.json();\n    throw new Error(`Could not fetch, received ${res.status}`);\n  }\n\n  getEvents = async () => {\n    return await this.restApi();\n  };\n\n  addEvent = async (...event) => {\n    return await this.restApi('POST', event);\n  }\n\n  deleteEvent = async (id) => {\n    return await this.restApi('DELETE', null, id);\n  }\n\n  editEvent = async (newEvent) => {\n    const events = await this.getResource();\n    const oldEvent = events.find((e) => e.id === newEvent.id);\n    const event = { ...oldEvent, ...newEvent };\n    return await this.restApi('PUT', event, event.id);\n  }\n}","import App from './App';\n\nexport default App;","import './App.scss';\nimport React from 'react';\nimport Header from '../header'\nimport ViewSchedule from '../view-schedule';\nimport Popup from '../popup';\nimport MockApiService from '../../services/mockApiService';\n\nclass App extends React.Component {\n  state = {\n    dates: [\n      '2020-01-27',\n      '2020-01-28',\n      '2020-01-29',\n      '2020-01-30',\n      '2020-01-31',\n      '2020-02-01',\n      '2020-02-02',\n    ],\n    listEvents: []\n  };\n  mockApiService = new MockApiService();\n\n  componentDidMount() {\n    this.fetchListEvents();\n  }\n\n  fetchListEvents = () => {\n    this.mockApiService.getEvents()\n      .then(listEvents => {\n        this.setState({ listEvents });\n      });\n  }\n\n  // onCreate = (text) => {\n  // const patern = {\n  //   name: 'Event 1',\n  //   createDate: '2020-01-29T07:00:00.000Z',\n  //   startDate: '2020-01-29T07:00:00.000Z',\n  //   endDate: '2020-01-29T11:15:00.000Z',\n  //   description: 'description text',\n  //   color: '#f14141',\n  // }\n  //   this.mockApiService.addEvent(text)\n  //     .then(() => this.fetchListEvents());\n  // }\n\n  // onDelete = (taskId) => {\n  //   this.mockApiService.deleteEvent(taskId)\n  //     .then(() => this.fetchListEvents());\n  // }\n\n  // onEdit = (taskId) => {\n  //   this.mockApiService.editEvent(taskId)\n  //     .then(() => this.fetchListEvents());\n  // }\n\n  render() {\n    const { dates, listEvents } = this.state;\n\n    return (\n      <>\n        <Header />\n        <main className=\"main\">\n          <ViewSchedule listEvents={listEvents} dates={dates} />\n        </main>\n        <Popup />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}